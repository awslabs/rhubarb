name: Publish pyrhubarb-mcp to PyPI

on:
  push:
    branches:
      - main
    tags:
      - 'mcp-v*'
    paths:
      - 'pyrhubarb-mcp/**'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pyrhubarb-mcp
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: poetry config virtualenvs.create false

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-mcp-${{ hashFiles('pyrhubarb-mcp/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-mcp-

      - name: Install dependencies
        run: poetry install

      - name: Test MCP Server Import
        run: |
          echo "Testing MCP server module import..."
          poetry run python -c "from pyrhubarb_mcp import RhubarbMCPServer; print('✓ MCP server module imported successfully')"

      - name: Test MCP Server CLI Entry Point
        run: |
          echo "Testing MCP server CLI entry point..."
          poetry run pyrhubarb-mcp --version
          echo "✓ MCP server CLI entry point working"

      - name: Test MCP Server Dependencies
        run: |
          echo "Checking MCP server dependencies..."
          poetry run pyrhubarb-mcp --check-deps
          echo "✓ MCP server dependencies validated"

      - name: Test MCP Server Help
        run: |
          echo "Testing MCP server help system..."
          poetry run pyrhubarb-mcp --help > /dev/null
          echo "✓ MCP server help system working"

      - name: Clean previous builds
        run: rm -rf dist
      
      - name: Build package
        run: poetry build --verbose

      - name: Build and publish to PyPI
        if: startsWith(github.ref, 'refs/tags/mcp-v')
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish --verbose
